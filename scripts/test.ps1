if (Test-Path -Path "$PWD/result.json") { 
    throw "'result.json' was direcrly commited to the repo rather than generated by the script. Please make sure that file is not commited to the repo and try again. " 
} else { 
    Write-Host "`u{2705} Checked if 'result.json' is not commited to the repo - OK"
}

try {
    . $PWD/task.ps1
    Write-Host "`u{2705} Checked if task script is running - OK"
}
catch {
    throw "Unable to run the task script - please check if it's running locally and try again. Original error: $($_)"
}

if (Test-Path -Path "$PWD/result.json") {
    Write-Host "`u{2705} Checked if 'result.json' was created after running task script - OK"
} else { 
    throw "Unable to find file 'result.json'. Please make sure that you are saving the result to the file in your script and try again." 
}

try {
    $regions = Get-Content "$PWD/result.json" | ConvertFrom-Json 
}
catch {
    throw "Unable to read regions data from file 'result.json'. Please check if script saves data in the json format and try again"
}

if ($regions.Count -eq 22) { 
    Write-Host "`u{2705} Checked the count of the regions in the result file - OK"
} else { 
    throw "Unable to validate the count of regions in the result file. Expected - 22, got - $($regions.Count). Please check possible reasons and try again. Possible reasonts: source data was re-generated (make sure to use original source data when submitting the solution); script is not using proper size family name; script is not implementing logic, described in the task. "
}

$secretRegion = $regions | Where-Object {$_ -eq 'southukraine'} 
if ($secretRegion) { 
    Write-Host "`u{2705} Checked if scrip found all the required regions - OK"
} else { 
    throw "Unable to validate the result list of regions. Please check possible reasons and try again. Possible reasonts: source data was re-generated (make sure to use original source data when submitting the solution); script is not using proper size family name; script is not implementing logic, described in the task. "
}

Write-Output ""
Write-Output "`u{1F973} Congratulations! All tests passed!"